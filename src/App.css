type User @model @auth(rules:[
  { allow: public, operations: [read] },
  { allow: private, operations: [read, create, update, delete] },
  { allow: owner, ownerField: "userId", identityClaim: "sub", operations: [read, create, update, delete] }
]) {
  id: ID!
  name: String!
  email: String
  password: String
  comments: [Comment] @hasMany
  blogs: [Blog] @hasMany
}

type Blog @model @auth(rules:[
  { allow: public, operations: [read] },
  { allow: private, operations: [read, create, update, delete] },
  { allow: owner, ownerField: "userId", identityClaim: "sub", operations: [read, create, update, delete] }
]) {
  id: ID!
  userId: ID!
  user: User @belongsTo(fields: ["userId"])
  name: String!
  comments: [Comment] @hasMany
}

type Comment @model @auth(rules:[
  { allow: public, operations: [read] },
  { allow: private, operations: [read, create, update, delete] },
  { allow: owner, ownerField: "userId", identityClaim: "sub", operations: [read, create, update, delete] }
]) {
  id: ID!
  userId: ID!
  user: User @belongsTo(fields: ["userId"])
  blogId: ID!
  blog: Blog @belongsTo(fields: ["blogId"])
  content: String!
}
